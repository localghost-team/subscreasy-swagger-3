{
  "openapi": "3.0.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "tags": [
    {
      "name": "account-resource",
      "description": "Account Resource"
    },
    {
      "name": "analytics-resource",
      "description": "Analytics Resource"
    },
    {
      "name": "bank-account-resource",
      "description": "Bank Account Resource"
    },
    {
      "name": "card-resource",
      "description": "Card Resource"
    },
    {
      "name": "charging-log-resource",
      "description": "Charging Log Resource"
    },
    {
      "name": "company-props-resource",
      "description": "Company Props Resource"
    },
    {
      "name": "company-resource",
      "description": "Company Resource"
    },
    {
      "name": "coupon-resource",
      "description": "Coupon Resource"
    },
    {
      "name": "endpoints",
      "description": "Endpoints"
    },
    {
      "name": "endpoints-no-auth",
      "description": "Endpoints No Auth"
    },
    {
      "name": "history-resource",
      "description": "History Resource"
    },
    {
      "name": "invoice-resource",
      "description": "Invoice Resource"
    },
    {
      "name": "message-template-resource",
      "description": "Message Template Resource"
    },
    {
      "name": "offer-resource",
      "description": "Offer Resource"
    },
    {
      "name": "order-resource",
      "description": "Order Resource"
    },
    {
      "name": "payment-resource",
      "description": "Payment Resource"
    },
    {
      "name": "profile-info-resource",
      "description": "Profile Info Resource"
    },
    {
      "name": "saved-card-resource",
      "description": "Saved Card Resource"
    },
    {
      "name": "service-instance-resource",
      "description": "Service Instance Resource"
    },
    {
      "name": "service-offering-resource",
      "description": "Service Offering Resource"
    },
    {
      "name": "service-resource",
      "description": "Service Resource"
    },
    {
      "name": "subscriber-resource",
      "description": "Subscriber Resource"
    },
    {
      "name": "subscription-resource",
      "description": "Subscription Resource"
    },
    {
      "name": "user-jwt-controller",
      "description": "User JWT Controller"
    },
    {
      "name": "user-resource",
      "description": "User Resource"
    },
    {
      "name": "web-hook-resource",
      "description": "Web Hook Resource"
    }
  ],
  "paths": {
    "/api/analytics/dashboard": {
      "get": {
        "tags": [
          "analytics-resource"
        ],
        "summary": "getDashboardAnalytics",
        "operationId": "getDashboardAnalyticsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/authenticate": {
      "get": {
        "tags": [
          "account-resource"
        ],
        "summary": "isAuthenticated",
        "operationId": "isAuthenticatedUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "user-jwt-controller"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginVM"
              }
            }
          },
          "description": "loginVM",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/authorize": {
      "put": {
        "tags": [
          "endpoints"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Authorization"
              }
            }
          },
          "description": "authorization",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/bank-accounts": {
      "get": {
        "tags": [
          "bank-account-resource"
        ],
        "summary": "getAllBankAccounts",
        "operationId": "getAllBankAccountsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "bank-account-resource"
        ],
        "summary": "createBankAccount",
        "operationId": "createBankAccountUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/BankAccount"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "bank-account-resource"
        ],
        "summary": "updateBankAccount",
        "operationId": "updateBankAccountUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/BankAccount"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/bank-accounts/company/{companyId}": {
      "get": {
        "tags": [
          "bank-account-resource"
        ],
        "summary": "getBankAccountsByCompany",
        "operationId": "getBankAccountsByCompanyUsingGET",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "companyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/bank-accounts/{id}": {
      "get": {
        "tags": [
          "bank-account-resource"
        ],
        "summary": "getBankAccount",
        "operationId": "getBankAccountUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "bank-account-resource"
        ],
        "summary": "deleteBankAccount",
        "operationId": "deleteBankAccountUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/card/subscriber": {
      "post": {
        "tags": [
          "card-resource"
        ],
        "summary": "saveCardForSubscriber",
        "operationId": "saveCardForSubscriberUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/SaveCardRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SavedCard"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/card/subscription": {
      "post": {
        "tags": [
          "card-resource"
        ],
        "summary": "saveCardForSubscription",
        "operationId": "saveCardForSubscriptionUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/SaveCardRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SavedCard"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getAllChargingLogs",
        "operationId": "getAllChargingLogsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "createChargingLog",
        "operationId": "createChargingLogUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/ChargingLog"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingLog"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "updateChargingLog",
        "operationId": "updateChargingLogUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/ChargingLog"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingLog"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs-totalamount-customer/{id}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getTotalRevenuePerMonth",
        "operationId": "getTotalRevenuePerMonthUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/refund/{chargingLogId}": {
      "post": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "refund",
        "operationId": "refundUsingPOST",
        "parameters": [
          {
            "name": "chargingLogId",
            "in": "path",
            "description": "chargingLogId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingLog"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/status/{status}": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getChargingLogsByStatus",
        "operationId": "getChargingLogsByStatusUsingGET",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/subscriber/id/{subscriberId}": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getPaymentsBySubscriberId",
        "operationId": "getPaymentsBySubscriberIdUsingGET",
        "parameters": [
          {
            "name": "subscriberId",
            "in": "path",
            "description": "subscriberId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/subscriber/m/{merchantSubscriberId}": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getPaymentsByMerchantSubscriberId",
        "operationId": "getPaymentsByMerchantSubscriberIdUsingGET",
        "parameters": [
          {
            "name": "merchantSubscriberId",
            "in": "path",
            "description": "merchantSubscriberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/subscriber/{subscriberSecureId}": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getPaymentsBySubscriberId",
        "operationId": "getPaymentsBySubscriberIdUsingGET_1",
        "parameters": [
          {
            "name": "subscriberSecureId",
            "in": "path",
            "description": "subscriberSecureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/subscription/{id}": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getPaymentsBySubscription",
        "operationId": "getPaymentsBySubscriptionUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/charging-logs/{id}": {
      "get": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "getChargingLog",
        "operationId": "getChargingLogUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingLog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "charging-log-resource"
        ],
        "summary": "deleteChargingLog",
        "operationId": "deleteChargingLogUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/companies": {
      "get": {
        "tags": [
          "company-resource"
        ],
        "summary": "getAllCompanies",
        "operationId": "getAllCompaniesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "company-resource"
        ],
        "summary": "createCompany",
        "operationId": "createCompanyUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Company"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "company-resource"
        ],
        "summary": "updateCompany",
        "operationId": "updateCompanyUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Company"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/companies/{id}": {
      "get": {
        "tags": [
          "company-resource"
        ],
        "summary": "getCompany",
        "operationId": "getCompanyUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "company-resource"
        ],
        "summary": "deleteCompany",
        "operationId": "deleteCompanyUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/company-props": {
      "get": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "getAllCompanyProps",
        "operationId": "getAllCompanyPropsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProps"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "createCompanyProps",
        "operationId": "createCompanyPropsUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/CompanyProps"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProps"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "updateCompanyProps",
        "operationId": "updateCompanyPropsUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/CompanyProps"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProps"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/company-props/company/{companyId}": {
      "get": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "getCompanyPropsByCompanyId",
        "operationId": "getCompanyPropsByCompanyIdUsingGET",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "companyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProps"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/company-props/uploadCSS": {
      "post": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "uploadCSS",
        "operationId": "uploadCSSUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/uploadCSSUsingPOST"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/company-props/uploadFile": {
      "post": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "uploadFile",
        "operationId": "uploadFileUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/uploadCSSUsingPOST"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/company-props/{id}": {
      "delete": {
        "tags": [
          "company-props-resource"
        ],
        "summary": "deleteCompanyProps",
        "operationId": "deleteCompanyPropsUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/coupons": {
      "get": {
        "tags": [
          "coupon-resource"
        ],
        "summary": "getAllCoupons",
        "operationId": "getAllCouponsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "coupon-resource"
        ],
        "summary": "createCoupon",
        "operationId": "createCouponUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Coupon"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "coupon-resource"
        ],
        "summary": "updateCoupon",
        "operationId": "updateCouponUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Coupon"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/coupons/{id}": {
      "get": {
        "tags": [
          "coupon-resource"
        ],
        "summary": "getCoupon",
        "operationId": "getCouponUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "coupon-resource"
        ],
        "summary": "deleteCoupon",
        "operationId": "deleteCouponUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/customer-totalAmountCharge/{id}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getCustomerTotalAmount",
        "operationId": "getCustomerTotalAmountUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/deduct": {
      "put": {
        "tags": [
          "endpoints"
        ],
        "summary": "deduct",
        "operationId": "deductUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deduction"
              }
            }
          },
          "description": "deduction",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionResult"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/getInvoiceDetails": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getInvoiceDetails",
        "operationId": "getInvoiceDetailsUsingGET",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            }
          },
          "description": "invoiceRequest",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/histories": {
      "get": {
        "tags": [
          "history-resource"
        ],
        "summary": "getAllHistories",
        "operationId": "getAllHistoriesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "history-resource"
        ],
        "summary": "createHistory",
        "operationId": "createHistoryUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/History"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/History"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "history-resource"
        ],
        "summary": "updateHistory",
        "operationId": "updateHistoryUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/History"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/History"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/histories/{id}": {
      "get": {
        "tags": [
          "history-resource"
        ],
        "summary": "getHistory",
        "operationId": "getHistoryUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/History"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "history-resource"
        ],
        "summary": "deleteHistory",
        "operationId": "deleteHistoryUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/invoices": {
      "get": {
        "tags": [
          "invoice-resource"
        ],
        "summary": "getAllInvoices",
        "operationId": "getAllInvoicesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "invoice-resource"
        ],
        "summary": "createInvoice",
        "operationId": "createInvoiceUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Invoice"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "invoice-resource"
        ],
        "summary": "updateInvoice",
        "operationId": "updateInvoiceUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Invoice"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/invoices/subscriber/{subscriberSecureId}": {
      "get": {
        "tags": [
          "invoice-resource"
        ],
        "summary": "getInvoiceBySubscriber",
        "operationId": "getInvoiceBySubscriberUsingGET",
        "parameters": [
          {
            "name": "subscriberSecureId",
            "in": "path",
            "description": "subscriberSecureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/invoices/{id}": {
      "get": {
        "tags": [
          "invoice-resource"
        ],
        "summary": "getInvoice",
        "operationId": "getInvoiceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "invoice-resource"
        ],
        "summary": "deleteInvoice",
        "operationId": "deleteInvoiceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/message-templates": {
      "get": {
        "tags": [
          "message-template-resource"
        ],
        "summary": "getAllMessageTemplates",
        "operationId": "getAllMessageTemplatesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "message-template-resource"
        ],
        "summary": "createMessageTemplate",
        "operationId": "createMessageTemplateUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/MessageTemplate"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "message-template-resource"
        ],
        "summary": "updateMessageTemplate",
        "operationId": "updateMessageTemplateUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/MessageTemplate"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/message-templates/email/{lifecycleEventName}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getMessageTemplate",
        "operationId": "getMessageTemplateUsingGET",
        "parameters": [
          {
            "name": "lifecycleEventName",
            "in": "path",
            "description": "lifecycleEventName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/message-templates/{id}": {
      "get": {
        "tags": [
          "message-template-resource"
        ],
        "summary": "getMessageTemplate",
        "operationId": "getMessageTemplateUsingGET_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "message-template-resource"
        ],
        "summary": "deleteMessageTemplate",
        "operationId": "deleteMessageTemplateUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/offers": {
      "get": {
        "tags": [
          "offer-resource"
        ],
        "summary": "getAllOffers",
        "operationId": "getAllOffersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Offer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "offer-resource"
        ],
        "summary": "createOffer",
        "operationId": "createOfferUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Offer"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "offer-resource"
        ],
        "summary": "updateOffer",
        "operationId": "updateOfferUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Offer"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/offers/archive/{id}": {
      "put": {
        "tags": [
          "offer-resource"
        ],
        "summary": "archiveOffer",
        "operationId": "archiveOfferUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/offers/sendOfferPriceChangedEmail/{offerId}": {
      "put": {
        "tags": [
          "offer-resource"
        ],
        "summary": "sendOfferPriceChangedEmail",
        "operationId": "sendOfferPriceChangedEmailUsingPUT",
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "offerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/offers/uploadFile/{offerId}": {
      "post": {
        "tags": [
          "offer-resource"
        ],
        "summary": "uploadFile",
        "operationId": "uploadFileUsingPOST_1",
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "offerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/uploadCSSUsingPOST"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/offers/{id}": {
      "get": {
        "tags": [
          "offer-resource"
        ],
        "summary": "getOffer",
        "operationId": "getOfferUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "offer-resource"
        ],
        "summary": "deleteOffer",
        "operationId": "deleteOfferUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/orders": {
      "get": {
        "tags": [
          "order-resource"
        ],
        "summary": "getAllOrders",
        "operationId": "getAllOrdersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "order-resource"
        ],
        "summary": "createOrder",
        "operationId": "createOrderUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Order"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "order-resource"
        ],
        "summary": "updateOrder",
        "operationId": "updateOrderUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Order"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "order-resource"
        ],
        "summary": "getOrder",
        "operationId": "getOrderUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "order-resource"
        ],
        "summary": "deleteOrder",
        "operationId": "deleteOrderUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/pay/by-saved-card": {
      "post": {
        "tags": [
          "payment-resource"
        ],
        "summary": "chargeUsingSavedCard",
        "operationId": "chargeUsingSavedCardUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/StartSubscriptionRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/pay/create-payment": {
      "post": {
        "tags": [
          "payment-resource"
        ],
        "summary": "createPayment",
        "operationId": "createPaymentUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/StartSubscriptionRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/profile-info": {
      "get": {
        "tags": [
          "profile-info-resource"
        ],
        "summary": "getActiveProfiles",
        "operationId": "getActiveProfilesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "account-resource"
        ],
        "summary": "registerAccount",
        "operationId": "registerAccountUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "description": "managedUserVM",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/saved-cards": {
      "get": {
        "tags": [
          "saved-card-resource"
        ],
        "summary": "getAllCards",
        "operationId": "getAllCardsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SavedCard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "saved-card-resource"
        ],
        "summary": "createCard",
        "operationId": "createCardUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/SavedCard"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SavedCard"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "saved-card-resource"
        ],
        "summary": "updateCard",
        "operationId": "updateCardUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/SavedCard"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SavedCard"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/saved-cards/{id}": {
      "get": {
        "tags": [
          "saved-card-resource"
        ],
        "summary": "getCard",
        "operationId": "getCardUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SavedCard"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "saved-card-resource"
        ],
        "summary": "deleteCard",
        "operationId": "deleteCardUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service-instances": {
      "get": {
        "tags": [
          "service-instance-resource"
        ],
        "summary": "getAllServiceInstances",
        "operationId": "getAllServiceInstancesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstance"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "service-instance-resource"
        ],
        "summary": "createServiceInstance",
        "operationId": "createServiceInstanceUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceInstance"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstance"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "service-instance-resource"
        ],
        "summary": "updateServiceInstance",
        "operationId": "updateServiceInstanceUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceInstance"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstance"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service-instances/subscription/{id}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getServiceInstancesBySubscription",
        "operationId": "getServiceInstancesBySubscriptionUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstanceResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service-instances/{id}": {
      "get": {
        "tags": [
          "service-instance-resource"
        ],
        "summary": "getServiceInstance",
        "operationId": "getServiceInstanceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstance"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "service-instance-resource"
        ],
        "summary": "deleteServiceInstance",
        "operationId": "deleteServiceInstanceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service-offerings": {
      "get": {
        "tags": [
          "service-offering-resource"
        ],
        "summary": "getAllServiceOfferings",
        "operationId": "getAllServiceOfferingsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOffering"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "service-offering-resource"
        ],
        "summary": "createServiceOffering",
        "operationId": "createServiceOfferingUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceOffering"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOffering"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "service-offering-resource"
        ],
        "summary": "updateServiceOffering",
        "operationId": "updateServiceOfferingUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceOffering"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOffering"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service-offerings/offer/{id}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getServiceOfferingsBySubscriptionPlan",
        "operationId": "getServiceOfferingsBySubscriptionPlanUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOfferingResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service-offerings/{id}": {
      "get": {
        "tags": [
          "service-offering-resource"
        ],
        "summary": "getServiceOffering",
        "operationId": "getServiceOfferingUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOffering"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "service-offering-resource"
        ],
        "summary": "deleteServiceOffering",
        "operationId": "deleteServiceOfferingUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/service/subscriber/{secureId}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "getAuthorizedServices",
        "operationId": "getAuthorizedServicesUsingGET",
        "parameters": [
          {
            "name": "secureId",
            "in": "path",
            "description": "secureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedServicesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/services": {
      "get": {
        "tags": [
          "service-resource"
        ],
        "summary": "getAllServices",
        "operationId": "getAllServicesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "service-resource"
        ],
        "summary": "createService",
        "operationId": "createServiceUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Service"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "service-resource"
        ],
        "summary": "updateService",
        "operationId": "updateServiceUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Service"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/services/{id}": {
      "get": {
        "tags": [
          "service-resource"
        ],
        "summary": "getService",
        "operationId": "getServiceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "service-resource"
        ],
        "summary": "deleteService",
        "operationId": "deleteServiceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscribers": {
      "get": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "getAllSubscribers",
        "operationId": "getAllSubscribersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscriber"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "createSubscriber",
        "operationId": "createSubscriberUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/Subscriber"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "updateSubscriber",
        "operationId": "updateSubscriberUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/Subscriber"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscribers/email/{email}": {
      "get": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "getSubscriberByEmail",
        "operationId": "getSubscriberByEmailUsingGET",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscriber"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscribers/find-all": {
      "get": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "findAllSubscribers",
        "operationId": "findAllSubscribersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscriber"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscribers/name/{name}": {
      "get": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "getSubscriberByName",
        "operationId": "getSubscriberByNameUsingGET",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscriber"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscribers/secureId/{secureId}": {
      "get": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "getSubscriberBySecureId",
        "operationId": "getSubscriberBySecureIdUsingGET",
        "parameters": [
          {
            "name": "secureId",
            "in": "path",
            "description": "secureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscribers/{id}": {
      "get": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "getSubscriber",
        "operationId": "getSubscriberUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "subscriber-resource"
        ],
        "summary": "deleteSubscriber",
        "operationId": "deleteSubscriberUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/cancel": {
      "put": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "cancelSubscription",
        "operationId": "cancelSubscriptionUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cancellation"
              }
            }
          },
          "description": "cancellation",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subsription"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/change-payment-method/{subscriptionId}": {
      "put": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "changePaymentMethod",
        "operationId": "changePaymentMethodUsingPUT",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscriptionId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subsription"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/charge/{subscriptionId}": {
      "put": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "chargeEarly",
        "operationId": "chargeEarlyUsingPUT",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscriptionId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/company/{id}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getAllCompanySubscriptions",
        "operationId": "getAllCompanySubscriptionsUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subsription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/offer/{id}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getAllSubscriptionsByOffer",
        "operationId": "getAllSubscriptionsByOfferUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subsription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/start": {
      "post": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "startSubscription",
        "operationId": "startSubscriptionUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/StartSubscriptionRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSubscriptionResult"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/status/{status}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getSubscriptionsByStatus",
        "operationId": "getSubscriptionsByStatusUsingGET",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subsription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/subscriber/email/{email}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getActiveSubscriptionsByEmail",
        "operationId": "getActiveSubscriptionsByEmailUsingGET",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subsription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/subscriber/m/{merchantSubscriberId}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getSubscriptionsByMerchantSubscriberId",
        "operationId": "getSubscriptionsByMerchantSubscriberIdUsingGET",
        "parameters": [
          {
            "name": "merchantSubscriberId",
            "in": "path",
            "description": "merchantSubscriberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subsription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/subscriber/{secureId}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getActiveSubscriptions",
        "operationId": "getActiveSubscriptionsUsingGET",
        "parameters": [
          {
            "name": "secureId",
            "in": "path",
            "description": "secureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subsription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/switch": {
      "put": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "switchSubscription",
        "operationId": "switchSubscriptionUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionSwitch"
              }
            }
          },
          "description": "switchRequest",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchSubscriptionResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/subscriptions/{id}": {
      "get": {
        "tags": [
          "subscription-resource"
        ],
        "summary": "getSubscription",
        "operationId": "getSubscriptionUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subsription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getAllUsers",
        "operationId": "getAllUsersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "user-resource"
        ],
        "summary": "createUser",
        "operationId": "createUserUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/ManagedUserVM"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "user-resource"
        ],
        "summary": "updateUser",
        "operationId": "updateUserUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/ManagedUserVM"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/users/authorities": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getAuthorities",
        "operationId": "getAuthoritiesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/users/company": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getAllUsersByAuthenticatedCompany",
        "operationId": "getAllUsersByAuthenticatedCompanyUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "user-resource"
        ],
        "summary": "createCompanyUser",
        "operationId": "createCompanyUserUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/ManagedUserVM"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/users/company/{companyId}": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getAllUsersByCompanyId",
        "operationId": "getAllUsersByCompanyIdUsingGET",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "companyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/users/{login}": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getUser",
        "operationId": "getUserUsingGET",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "user-resource"
        ],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingDELETE",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/web-hooks": {
      "get": {
        "tags": [
          "web-hook-resource"
        ],
        "summary": "getAllWebHooks",
        "operationId": "getAllWebHooksUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebHook"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "web-hook-resource"
        ],
        "summary": "createWebHook",
        "operationId": "createWebHookUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/WebHook"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "web-hook-resource"
        ],
        "summary": "updateWebHook",
        "operationId": "updateWebHookUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/WebHook"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/web-hooks/{id}": {
      "get": {
        "tags": [
          "web-hook-resource"
        ],
        "summary": "getWebHook",
        "operationId": "getWebHookUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "web-hook-resource"
        ],
        "summary": "deleteWebHook",
        "operationId": "deleteWebHookUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ]
      }
    },
    "/na/subscription/start/4ds": {
      "post": {
        "tags": [
          "endpoints-no-auth"
        ],
        "summary": "startSubscription3ds",
        "operationId": "startSubscription3dsUsingPOST",
        "parameters": [
          {
            "name": "offer.recurrence.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.recurrence.recurrenceType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SECONDLY",
                "MINUTELY",
                "HOURLY",
                "DAILY",
                "WEEKLY",
                "MONTHLY",
                "YEARLY"
              ]
            }
          },
          {
            "name": "offer.recurrence.length",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.company.address.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.company.address.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.address.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.address.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.address.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.address.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.address.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.address.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.company.companyProps.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.company.companyProps.callbackUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.logoPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.hostedPageCSSPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.privacyPolicyUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.subscreasyApiKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.subscreasySecureKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.paymentGateway",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OFFLINE",
                "IYZICO",
                "PAYU",
                "PAYTR",
                "MOBILEXPRESS",
                "AKTIFBANK"
              ]
            }
          },
          {
            "name": "offer.company.companyProps.mobilePaymentGateway",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DISABLED",
                "WIRECARD"
              ]
            }
          },
          {
            "name": "offer.company.companyProps.wirecardUserCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.wirecardPin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.wirecardTurkcellServisId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.wirecardSuccessfulMessage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.wirecardErrorMessage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.paymentGatewayApiKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.paymentGatewaySecurityKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.payuMerchantKeyRenewals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.payuSecretKeyRenewals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.paytrMerchantId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.mobilExpressMerchantKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.mobilExpressApiPassword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.mobilExpressPosid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankClientId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankPassword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankClientIdForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankNameForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankPasswordForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.aktifbankEncryptionKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.billingDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.billingThresholdDays",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.domainName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.contactEmail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.sendDailyReports",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.companyProps.retryCount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.retryPeriod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.company.companyProps.notifyNewSubscription",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.company.companyProps.notifyRenewal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.company.companyProps.notifySubscriptionCancellation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.company.companyProps.branding",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.company.companyProps.billingInformationMandatory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.company.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.company.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.company.siteName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offer.secureId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.price",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offer.currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "TRY",
                "USD"
              ]
            }
          },
          {
            "name": "offer.multiplePurchase",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.recurrenceCount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.trialPeriod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offer.productType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PHYSICAL",
                "SERVICE"
              ]
            }
          },
          {
            "name": "offer.renewalType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "BILLCYCLE",
                "START_DATE"
              ]
            }
          },
          {
            "name": "offer.disablePaymentForm",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offer.createDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offer.imagePath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.billingAddress.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.billingAddress.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.shippingAddress.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.shippingAddress.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.shippingAddress.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.shippingAddress.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.shippingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.shippingAddress.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.shippingAddress.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.shippingAddress.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.company.address.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.company.address.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.address.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.address.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.address.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.address.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.address.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.address.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.company.companyProps.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.company.companyProps.callbackUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.logoPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.hostedPageCSSPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.privacyPolicyUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.subscreasyApiKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.subscreasySecureKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.paymentGateway",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OFFLINE",
                "IYZICO",
                "PAYU",
                "PAYTR",
                "MOBILEXPRESS",
                "AKTIFBANK"
              ]
            }
          },
          {
            "name": "subscriber.company.companyProps.mobilePaymentGateway",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DISABLED",
                "WIRECARD"
              ]
            }
          },
          {
            "name": "subscriber.company.companyProps.wirecardUserCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.wirecardPin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.wirecardTurkcellServisId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.wirecardSuccessfulMessage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.wirecardErrorMessage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.paymentGatewayApiKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.paymentGatewaySecurityKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.payuMerchantKeyRenewals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.payuSecretKeyRenewals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.paytrMerchantId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.mobilExpressMerchantKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.mobilExpressApiPassword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.mobilExpressPosid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankClientId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankPassword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankClientIdForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankNameForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankPasswordForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.aktifbankEncryptionKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.billingDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.billingThresholdDays",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.domainName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.contactEmail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.sendDailyReports",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.companyProps.retryCount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.retryPeriod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriber.company.companyProps.notifyNewSubscription",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriber.company.companyProps.notifyRenewal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriber.company.companyProps.notifySubscriptionCancellation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriber.company.companyProps.branding",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriber.company.companyProps.billingInformationMandatory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriber.company.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.company.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.company.siteName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriber.secureId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.merchantSubscriberId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.surname",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.createDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "subscriber.identificationNo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.taxNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.taxAdministration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber.worksFor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.cardHolderName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.cardNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.expireYear",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.expireMonth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.cvc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.registerCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentCard.cardAlias",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.cardToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.cardUserKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentCard.cardFamily",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "savedCard.cardAlias",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cardUserKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cardToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.binNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.lastFourDigits",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cartType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cardAssociation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cardFamily",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cardBankCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "savedCard.cardBankName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.cardCVV",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "savedCard.expireDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "savedCard.subscriberId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "savedCard.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.billingAddress.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.shippingAddress.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.company.address.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.company.address.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.address.streetAddress",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.address.postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.address.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.address.stateProvince",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.address.country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.address.companyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.callbackUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.logoPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.hostedPageCSSPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.privacyPolicyUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.subscreasyApiKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.subscreasySecureKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.paymentGateway",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OFFLINE",
                "IYZICO",
                "PAYU",
                "PAYTR",
                "MOBILEXPRESS",
                "AKTIFBANK"
              ]
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.mobilePaymentGateway",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DISABLED",
                "WIRECARD"
              ]
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.wirecardUserCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.wirecardPin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.wirecardTurkcellServisId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.wirecardSuccessfulMessage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.wirecardErrorMessage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.paymentGatewayApiKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.paymentGatewaySecurityKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.payuMerchantKeyRenewals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.payuSecretKeyRenewals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.paytrMerchantId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.mobilExpressMerchantKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.mobilExpressApiPassword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.mobilExpressPosid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankClientId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankPassword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankClientIdForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankNameForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankPasswordForSaveCard",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.aktifbankEncryptionKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.billingDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.billingThresholdDays",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.domainName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.contactEmail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.sendDailyReports",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.retryCount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.retryPeriod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.notifyNewSubscription",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.notifyRenewal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.notifySubscriptionCancellation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.branding",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriberFromDb.company.companyProps.billingInformationMandatory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subscriberFromDb.company.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.company.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.company.siteName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriberFromDb.secureId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.merchantSubscriberId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.surname",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.createDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "subscriberFromDb.identificationNo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.taxNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.taxAdministration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriberFromDb.worksFor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackParams",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "couponCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errorCallbackUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "companySiteName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privacyPolicyUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "paymentType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OFFLINE",
                "CC",
                "MOBILE"
              ]
            }
          },
          {
            "name": "editable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PHYSICAL",
                "SERVICE"
              ]
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SUBSCRIPTION_REQUEST",
                "CANCELLATION",
                "PAYMENT_REQUEST"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://sandbox.subscreasy.com/"
    },
    {
      "url": "https://prod.subscreasy.com/"
    }
  ],
  "components": {
    "requestBodies": {
      "Company": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Company"
            }
          }
        },
        "description": "company",
        "required": true
      },
      "ServiceInstance": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceInstance"
            }
          }
        },
        "description": "serviceInstance",
        "required": true
      },
      "BankAccount": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BankAccount"
            }
          }
        },
        "description": "bankAccount",
        "required": true
      },
      "Invoice": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        },
        "description": "invoice",
        "required": true
      },
      "StartSubscriptionRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StartSubscriptionRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "Offer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Offer"
            }
          }
        },
        "description": "offer",
        "required": true
      },
      "Subscriber": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Subscriber"
            }
          }
        },
        "description": "subscriber",
        "required": true
      },
      "CompanyProps": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CompanyProps"
            }
          }
        },
        "description": "companyProps",
        "required": true
      },
      "SaveCardRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SaveCardRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ChargingLog": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ChargingLog"
            }
          }
        },
        "description": "chargingLog",
        "required": true
      },
      "uploadCSSUsingPOST": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "description": "file",
                  "type": "string",
                  "format": "binary"
                }
              },
              "required": [
                "file"
              ]
            }
          }
        }
      },
      "Coupon": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Coupon"
            }
          }
        },
        "description": "coupon",
        "required": true
      },
      "History": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/History"
            }
          }
        },
        "description": "history",
        "required": true
      },
      "MessageTemplate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageTemplate"
            }
          }
        },
        "description": "messageTemplate",
        "required": true
      },
      "Order": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        },
        "description": "order",
        "required": true
      },
      "SavedCard": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SavedCard"
            }
          }
        },
        "description": "card",
        "required": true
      },
      "ServiceOffering": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceOffering"
            }
          }
        },
        "description": "serviceOffering",
        "required": true
      },
      "Service": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Service"
            }
          }
        },
        "description": "service",
        "required": true
      },
      "ManagedUserVM": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ManagedUserVM"
            }
          }
        },
        "description": "managedUserVM",
        "required": true
      },
      "WebHook": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WebHook"
            }
          }
        },
        "description": "webHook",
        "required": true
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "country": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "stateProvince": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          }
        },
        "title": "Address"
      },
      "Authority": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          }
        },
        "title": "Authority"
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceUserId": {
            "type": "string"
          }
        },
        "title": "Authorization"
      },
      "AuthorizedServicesResponse": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceInstance"
            }
          }
        },
        "title": "AuthorizedServicesResponse"
      },
      "BankAccount": {
        "type": "object",
        "required": [
          "iban",
          "name"
        ],
        "properties": {
          "branch": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "country": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "BankAccount"
      },
      "Cancellation": {
        "type": "object",
        "properties": {
          "cancellationType": {
            "type": "string",
            "enum": [
              "IMMEDIATE",
              "ENDOFTHEPERIOD"
            ]
          },
          "subscriberId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "Cancellation"
      },
      "ChargingLog": {
        "type": "object",
        "properties": {
          "appliedCoupon": {
            "type": "integer",
            "format": "int64"
          },
          "authCode": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorText": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "jobId": {
            "type": "integer",
            "format": "int64"
          },
          "offerId": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "OFFLINE",
              "IYZICO",
              "PAYU",
              "PAYTR",
              "MOBILEXPRESS",
              "AKTIFBANK"
            ]
          },
          "paymentId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "reason": {
            "type": "string",
            "enum": [
              "START",
              "RENEWAL",
              "OVER_USAGE",
              "REFUND",
              "SAVE_CARD",
              "TRIAL_PERIOD",
              "PAYMENT"
            ]
          },
          "refundDate": {
            "type": "string",
            "format": "date-time"
          },
          "savedCard": {
            "$ref": "#/components/schemas/SavedCard"
          },
          "savedCardId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_PAID",
              "PAID",
              "FAIL",
              "REFUNDED"
            ]
          },
          "subscriberId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriberSecureId": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "threeds": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "title": "ChargingLog"
      },
      "Company": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "siteName": {
            "type": "string"
          }
        },
        "title": "Company"
      },
      "CompanyProps": {
        "type": "object",
        "required": [
          "billingInformationMandatory",
          "branding",
          "domainName",
          "notifyNewSubscription",
          "notifyRenewal",
          "notifySubscriptionCancellation"
        ],
        "properties": {
          "aktifbankClientId": {
            "type": "integer",
            "format": "int32"
          },
          "aktifbankClientIdForSaveCard": {
            "type": "integer",
            "format": "int32"
          },
          "aktifbankEncryptionKey": {
            "type": "string"
          },
          "aktifbankName": {
            "type": "string"
          },
          "aktifbankNameForSaveCard": {
            "type": "string"
          },
          "aktifbankPassword": {
            "type": "string"
          },
          "aktifbankPasswordForSaveCard": {
            "type": "string"
          },
          "billingDate": {
            "type": "integer",
            "format": "int32"
          },
          "billingInformationMandatory": {
            "type": "boolean"
          },
          "billingThresholdDays": {
            "type": "integer",
            "format": "int32"
          },
          "branding": {
            "type": "boolean"
          },
          "callbackUrl": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "contactEmail": {
            "type": "string"
          },
          "domainName": {
            "type": "string"
          },
          "hostedPageCSSPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "logoPath": {
            "type": "string"
          },
          "mobilExpressApiPassword": {
            "type": "string"
          },
          "mobilExpressMerchantKey": {
            "type": "string"
          },
          "mobilExpressPosid": {
            "type": "integer",
            "format": "int32"
          },
          "mobilePaymentGateway": {
            "type": "string",
            "enum": [
              "DISABLED",
              "WIRECARD"
            ]
          },
          "notifyNewSubscription": {
            "type": "boolean"
          },
          "notifyRenewal": {
            "type": "boolean"
          },
          "notifySubscriptionCancellation": {
            "type": "boolean"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "OFFLINE",
              "IYZICO",
              "PAYU",
              "PAYTR",
              "MOBILEXPRESS",
              "AKTIFBANK"
            ]
          },
          "paymentGatewayApiKey": {
            "type": "string"
          },
          "paymentGatewaySecurityKey": {
            "type": "string"
          },
          "paytrDirectApiEnabled": {
            "type": "boolean"
          },
          "paytrMerchantId": {
            "type": "integer",
            "format": "int32"
          },
          "payuMerchantKeyRenewals": {
            "type": "string"
          },
          "payuSecretKeyRenewals": {
            "type": "string"
          },
          "privacyPolicyUrl": {
            "type": "string"
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          },
          "retryPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "sendDailyReports": {
            "type": "string"
          },
          "subscreasyApiKey": {
            "type": "string"
          },
          "subscreasySecureKey": {
            "type": "string"
          },
          "wirecardErrorMessage": {
            "type": "string"
          },
          "wirecardPin": {
            "type": "string"
          },
          "wirecardSuccessfulMessage": {
            "type": "string"
          },
          "wirecardTurkcellServisId": {
            "type": "string"
          },
          "wirecardUserCode": {
            "type": "string"
          }
        },
        "title": "CompanyProps"
      },
      "Coupon": {
        "type": "object",
        "required": [
          "discountAmount",
          "discountType",
          "maxLimit"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "currentUsage": {
            "type": "integer",
            "format": "int32"
          },
          "discountAmount": {
            "type": "number"
          },
          "discountType": {
            "type": "string",
            "enum": [
              "FIXED",
              "PERCENTAGE"
            ]
          },
          "expireDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Coupon"
      },
      "Deduction": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceName": {
            "type": "string"
          },
          "subscriberEmail": {
            "type": "string"
          },
          "subscriberSecureId": {
            "type": "string"
          },
          "usageEndTime": {
            "type": "string",
            "format": "date-time"
          },
          "usageStartTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Deduction"
      },
      "DeductionResult": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "number"
          },
          "consumedResourceId": {
            "type": "integer",
            "format": "int64"
          },
          "overUsage": {
            "type": "number"
          },
          "requestedAmount": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "usage": {
            "type": "number"
          }
        },
        "title": "DeductionResult"
      },
      "History": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "enum": [
              "STARTED",
              "RENEWED",
              "RENEWAL_FAILED",
              "FINISHED",
              "CANCELLED",
              "SUBSCRIBER_CREATED",
              "SUBSCRIBER_UPDATED",
              "TRIAL_ENDING",
              "PAYMENT_UPDATED",
              "IMMEDIATE_CANCELLATION_REQUESTED",
              "ENDOFPERIOD_CANCELLATION_REQUESTED",
              "PRICE_UPDATED"
            ]
          },
          "subscription": {
            "$ref": "#/components/schemas/Subsription"
          }
        },
        "title": "History"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "billingMonth": {
            "type": "integer",
            "format": "int32"
          },
          "billingYear": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "periodStart": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "subscriberSecureId": {
            "type": "string"
          }
        },
        "title": "Invoice"
      },
      "InvoiceRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "selectedDate": {
            "type": "string",
            "format": "date-time"
          },
          "serviceUserId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "InvoiceRequest"
      },
      "Job": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "detailProps": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "details": {
            "type": "string"
          },
          "executionCount": {
            "type": "integer",
            "format": "int32"
          },
          "executionDate": {
            "type": "string",
            "format": "date-time"
          },
          "executionStatus": {
            "type": "string",
            "enum": [
              "NEW",
              "WAITING",
              "RUNNING",
              "PENDING",
              "FINISHED",
              "FAILED",
              "CANCELLED",
              "EXPIRED"
            ]
          },
          "firstExecutionDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "retryDate": {
            "type": "string",
            "format": "date-time"
          },
          "retryRequired": {
            "type": "boolean"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subsription"
          },
          "workflowId": {
            "type": "string",
            "enum": [
              "CHARGING",
              "NOTIFY",
              "TERMINATION",
              "DAILY",
              "OFFLINE_PAYMENT_CHECK"
            ]
          }
        },
        "title": "Job"
      },
      "LoginVM": {
        "type": "object",
        "required": [
          "password",
          "username"
        ],
        "properties": {
          "company": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "maxLength": 100
          },
          "rememberMe": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[_'.@A-Za-z0-9-]*$"
          }
        },
        "title": "LoginVM"
      },
      "ManagedUserVM": {
        "type": "object",
        "required": [
          "login"
        ],
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "minLength": 5,
            "maxLength": 100
          },
          "firstName": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "langKey": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "login": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[_'.@A-Za-z0-9-]*$"
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "maxLength": 100
          },
          "resetDate": {
            "type": "string"
          },
          "siteName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        },
        "title": "ManagedUserVM"
      },
      "MessageTemplate": {
        "type": "object",
        "required": [
          "company"
        ],
        "properties": {
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "enabled": {
            "type": "boolean"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "STARTED",
              "RENEWED",
              "RENEWAL_FAILED",
              "FINISHED",
              "CANCELLED",
              "SUBSCRIBER_CREATED",
              "SUBSCRIBER_UPDATED",
              "TRIAL_ENDING",
              "PAYMENT_UPDATED",
              "IMMEDIATE_CANCELLATION_REQUESTED",
              "ENDOFPERIOD_CANCELLATION_REQUESTED",
              "PRICE_UPDATED"
            ]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "messageTemplate": {
            "type": "string"
          },
          "notificationType": {
            "type": "string",
            "enum": [
              "WEBHOOK",
              "EMAIL"
            ]
          },
          "sender": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          }
        },
        "title": "MessageTemplate"
      },
      "Offer": {
        "type": "object",
        "required": [
          "company",
          "currency",
          "disablePaymentForm",
          "multiplePurchase",
          "name",
          "openEnded",
          "price"
        ],
        "properties": {
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "enum": [
              "TRY",
              "USD"
            ]
          },
          "description": {
            "type": "string"
          },
          "disablePaymentForm": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imagePath": {
            "type": "string"
          },
          "multiplePurchase": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "openEnded": {
            "type": "boolean"
          },
          "physicalProduct": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "productType": {
            "type": "string",
            "enum": [
              "PHYSICAL",
              "SERVICE"
            ]
          },
          "recurrence": {
            "$ref": "#/components/schemas/RecurrencePeriod"
          },
          "recurrenceCount": {
            "type": "integer",
            "format": "int32"
          },
          "renewalBillcycleBased": {
            "type": "boolean"
          },
          "renewalType": {
            "type": "string",
            "enum": [
              "BILLCYCLE",
              "START_DATE"
            ]
          },
          "secureId": {
            "type": "string"
          },
          "trialPeriod": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Offer"
      },
      "Order": {
        "type": "object",
        "required": [
          "buyer",
          "company",
          "offer",
          "status",
          "subscription"
        ],
        "properties": {
          "buyer": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "payment": {
            "$ref": "#/components/schemas/ChargingLog"
          },
          "shippingAddress": {
            "type": "integer",
            "format": "int64"
          },
          "shippingCode": {
            "type": "string"
          },
          "shippingCompany": {
            "type": "string",
            "enum": [
              "MNG",
              "SURAT",
              "YURTICI"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PREPARING",
              "SHIPPED",
              "DELIVERED",
              "CANCELLED"
            ]
          },
          "subscription": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "Order"
      },
      "PaymentCard": {
        "type": "object",
        "properties": {
          "cardAlias": {
            "type": "string"
          },
          "cardExpiry": {
            "type": "string"
          },
          "cardFamily": {
            "type": "string"
          },
          "cardHolderName": {
            "type": "string"
          },
          "cardNumber": {
            "type": "string"
          },
          "cardToken": {
            "type": "string"
          },
          "cardUserKey": {
            "type": "string"
          },
          "cvc": {
            "type": "string"
          },
          "expireMonth": {
            "type": "string"
          },
          "expireYear": {
            "type": "string"
          },
          "expireYearLast2Digits": {
            "type": "string"
          },
          "registerCard": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "PaymentCard"
      },
      "ProfileInfoVM": {
        "type": "object",
        "properties": {
          "activeProfiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ribbonEnv": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "title": "ProfileInfoVM"
      },
      "RecurrencePeriod": {
        "type": "object",
        "required": [
          "length",
          "recurrenceType"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "length": {
            "type": "integer",
            "format": "int64"
          },
          "recurrenceType": {
            "type": "string",
            "enum": [
              "SECONDLY",
              "MINUTELY",
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ]
          }
        },
        "title": "RecurrencePeriod"
      },
      "ResponseEntity": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "100",
              "101",
              "102",
              "103",
              "200",
              "201",
              "202",
              "203",
              "204",
              "205",
              "206",
              "207",
              "208",
              "226",
              "300",
              "301",
              "302",
              "303",
              "304",
              "305",
              "307",
              "308",
              "400",
              "401",
              "402",
              "403",
              "404",
              "405",
              "406",
              "407",
              "408",
              "409",
              "410",
              "411",
              "412",
              "413",
              "414",
              "415",
              "416",
              "417",
              "418",
              "419",
              "420",
              "421",
              "422",
              "423",
              "424",
              "426",
              "428",
              "429",
              "431",
              "451",
              "500",
              "501",
              "502",
              "503",
              "504",
              "505",
              "506",
              "507",
              "508",
              "509",
              "510",
              "511"
            ]
          },
          "statusCodeValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "ResponseEntity"
      },
      "SaveCardRequest": {
        "type": "object",
        "properties": {
          "paymentCard": {
            "$ref": "#/components/schemas/PaymentCard"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subsription"
          }
        },
        "title": "SaveCardRequest"
      },
      "SavedCard": {
        "type": "object",
        "properties": {
          "binNumber": {
            "type": "string"
          },
          "cardAlias": {
            "type": "string"
          },
          "cardAssociation": {
            "type": "string"
          },
          "cardBankCode": {
            "type": "integer",
            "format": "int64"
          },
          "cardBankName": {
            "type": "string"
          },
          "cardCVV": {
            "type": "string"
          },
          "cardFamily": {
            "type": "string"
          },
          "cardToken": {
            "type": "string"
          },
          "cardUserKey": {
            "type": "string"
          },
          "cartType": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "expireDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastFourDigits": {
            "type": "string"
          },
          "subscriberId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "SavedCard"
      },
      "Service": {
        "type": "object",
        "required": [
          "company",
          "name",
          "type"
        ],
        "properties": {
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ONOFF",
              "SEAT_BASED",
              "USAGE_BASED"
            ]
          }
        },
        "title": "Service"
      },
      "ServiceInstance": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "number"
          },
          "currentUsage": {
            "type": "number"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "numberOfUnits": {
            "type": "integer",
            "format": "int32"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "overUsage": {
            "type": "number"
          },
          "overUsageQuota": {
            "type": "number"
          },
          "quotaOrigin": {
            "type": "string",
            "enum": [
              "SUBS",
              "OVER"
            ]
          },
          "serviceOffering": {
            "$ref": "#/components/schemas/ServiceOffering"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACTIVE",
              "SUSPENDED",
              "FINISHED",
              "CANCELLED",
              "IN_TRIAL",
              "PAYMENT_DUE"
            ]
          },
          "subscriberId": {
            "type": "string"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subsription"
          },
          "type": {
            "type": "string",
            "enum": [
              "ONOFF",
              "SEAT_BASED",
              "USAGE_BASED"
            ]
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "ServiceInstance"
      },
      "ServiceInstanceResult": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "number"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "overUsage": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACTIVE",
              "SUSPENDED",
              "FINISHED",
              "CANCELLED",
              "IN_TRIAL",
              "PAYMENT_DUE"
            ]
          },
          "type": {
            "type": "string"
          },
          "usage": {
            "type": "number"
          }
        },
        "title": "ServiceInstanceResult"
      },
      "ServiceOffering": {
        "type": "object",
        "required": [
          "quotaAmount"
        ],
        "properties": {
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "overUsagePrice": {
            "type": "number"
          },
          "overUsageQuota": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "quotaAmount": {
            "type": "number"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "unitName": {
            "type": "string"
          }
        },
        "title": "ServiceOffering"
      },
      "ServiceOfferingResult": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "unitName": {
            "type": "string"
          },
          "unitsPerPrice": {
            "type": "number"
          }
        },
        "title": "ServiceOfferingResult"
      },
      "StartSubscriptionRequest": {
        "type": "object",
        "properties": {
          "callbackParams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "callbackUrl": {
            "type": "string"
          },
          "companySiteName": {
            "type": "string"
          },
          "couponCode": {
            "type": "string"
          },
          "editable": {
            "type": "boolean"
          },
          "errorCallbackUrl": {
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "paymentCard": {
            "$ref": "#/components/schemas/PaymentCard"
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "OFFLINE",
              "CC",
              "MOBILE"
            ]
          },
          "price": {
            "type": "number"
          },
          "privacyPolicyUrl": {
            "type": "boolean"
          },
          "productType": {
            "type": "string",
            "enum": [
              "PHYSICAL",
              "SERVICE"
            ]
          },
          "savedCard": {
            "$ref": "#/components/schemas/SavedCard"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "subscriberFromDb": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "SUBSCRIPTION_REQUEST",
              "CANCELLATION",
              "PAYMENT_REQUEST"
            ]
          }
        },
        "title": "StartSubscriptionRequest"
      },
      "StartSubscriptionResult": {
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/ChargingLog"
          },
          "paymentCard": {
            "$ref": "#/components/schemas/PaymentCard"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subsription"
          }
        },
        "title": "StartSubscriptionResult"
      },
      "Subscriber": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identificationNo": {
            "type": "string"
          },
          "merchantSubscriberId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "secureId": {
            "type": "string"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "surname": {
            "type": "string"
          },
          "taxAdministration": {
            "type": "string"
          },
          "taxNumber": {
            "type": "string"
          },
          "worksFor": {
            "type": "string"
          }
        },
        "title": "Subscriber"
      },
      "SubscriptionSwitch": {
        "type": "object",
        "properties": {
          "cancelExistingSubscription": {
            "type": "string",
            "enum": [
              "IMMEDIATE",
              "ENDOFTHEPERIOD"
            ]
          },
          "nextOfferId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "SubscriptionSwitch"
      },
      "Subsription": {
        "type": "object",
        "required": [
          "company",
          "offer"
        ],
        "properties": {
          "appliedCoupon": {
            "$ref": "#/components/schemas/Coupon"
          },
          "cancelDate": {
            "type": "string",
            "format": "date-time"
          },
          "card": {
            "$ref": "#/components/schemas/SavedCard"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastEvent": {
            "type": "string",
            "enum": [
              "STARTED",
              "RENEWED",
              "RENEWAL_FAILED",
              "FINISHED",
              "CANCELLED",
              "SUBSCRIBER_CREATED",
              "SUBSCRIBER_UPDATED",
              "TRIAL_ENDING",
              "PAYMENT_UPDATED",
              "IMMEDIATE_CANCELLATION_REQUESTED",
              "ENDOFPERIOD_CANCELLATION_REQUESTED",
              "PRICE_UPDATED"
            ]
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "OFFLINE",
              "CC",
              "MOBILE"
            ]
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceInstance"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACTIVE",
              "SUSPENDED",
              "FINISHED",
              "CANCELLED",
              "IN_TRIAL",
              "PAYMENT_DUE"
            ]
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "subscriberSecureId": {
            "type": "string"
          },
          "termEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "termStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialEndDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Subsription"
      },
      "SwitchSubscriptionResponse": {
        "type": "object",
        "properties": {
          "currentSubscription": {
            "$ref": "#/components/schemas/Subsription"
          },
          "nextSubscription": {
            "$ref": "#/components/schemas/Subsription"
          }
        },
        "title": "SwitchSubscriptionResponse"
      },
      "User": {
        "type": "object",
        "required": [
          "activated",
          "companyOwner",
          "login"
        ],
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authority"
            }
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "companyOwner": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "minLength": 5,
            "maxLength": 100
          },
          "firstName": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "langKey": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "login": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[_'.@A-Za-z0-9-]*$"
          },
          "loginCount": {
            "type": "integer",
            "format": "int64"
          },
          "resetDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "User"
      },
      "UserDTO": {
        "type": "object",
        "required": [
          "login"
        ],
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "minLength": 5,
            "maxLength": 100
          },
          "firstName": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "langKey": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "login": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[_'.@A-Za-z0-9-]*$"
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "maxLength": 100
          },
          "resetDate": {
            "type": "string"
          },
          "siteName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "subscriber": {
            "type": "boolean"
          }
        },
        "title": "UserDTO"
      },
      "WebHook": {
        "type": "object",
        "properties": {
          "authenticationKey": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "paymentUpdated": {
            "type": "boolean"
          },
          "serverUrl": {
            "type": "string"
          },
          "subscriberCreated": {
            "type": "boolean"
          },
          "subscriberUpdated": {
            "type": "boolean"
          },
          "subscriptionCreated": {
            "type": "boolean"
          },
          "subscriptionEnded": {
            "type": "boolean"
          },
          "subscriptionReactivated": {
            "type": "boolean"
          },
          "subscriptionRenewalFailed": {
            "type": "boolean"
          },
          "subscriptionRenewed": {
            "type": "boolean"
          }
        },
        "title": "WebHook"
      }
    }
  }
}